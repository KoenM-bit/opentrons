!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=6)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var o=n(1),r=n.n(o),i=n(2);function c(e){console.log("path is ".concat(e.serialPort));var t=new i.SerialPort({path:e.serialPort,baudRate:115200}),n=r()((function(e,n){return t}));return n.maxFreeSockets=1,n.maxSockets=1,n.maxTotalSockets=1,n.destroy=function(){return t.close()},n}},function(e,t){e.exports=require("agent-base")},function(e,t){e.exports=require("serialport")},function(e,t){e.exports=require("yargs")},function(e,t){e.exports=require("node-fetch")},,function(e,t,n){"use strict";n.r(t);var o=n(3),r=n.n(o),i=n(0),c=n(4),a=n.n(c),u=["error","warn","info","http","verbose","debug","silly"],l=function(e){var t=u.indexOf(e.logLevel);return{error:t>=0?console.error:function(){},warn:t>=1?console.warn:function(){},info:t>=2?console.info:function(){},http:t>=3?console.debug:function(){},verbose:t>=4?console.debug:function(){},debug:t>=5?console.debug:function(){},silly:t>=6?console.debug:function(){}}};r.a.options({logLevel:{describe:"Log level",alias:"l",choices:[].concat(u,["off"]),default:"info"}}).middleware([function(e){return l(e).debug("Calling ".concat(e.$0," with argv:"),e),e}]).command("usb-curl <serialPath> <method> <httpPath>","Provide a curl-like interface that will make a request via the specified USB serial",(function(e){e.positional("serialPath",{describe:"Path to serial port to communicate with",type:"string"}),e.positional("method",{describe:"HTTP method",type:"string"}),e.positional("httpPath",{describe:"Path to query",type:"string"})}),(function(e){var t=l(e);t.verbose("building agent for ".concat(e.serialPath));var n=Object(i.a)({serialPort:e.serialPath}),o="http://www.company.com/".concat(e.httpPath);t.info("starting fetch to ".concat(o)),a()(o,{method:e.method,agent:n,headers:{"opentrons-version":"2"}}).then((function(e){return e.text()})).then((function(e){return console.log(e)})).finally((function(){t.info("done, closing connection")}))})).strict().version("6.2.1").help().parse()}]));
//# sourceMappingURL=cli.js.map